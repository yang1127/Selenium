{"name": "输入正确用例，可以下载", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=99.0.4844.51)\nStacktrace:\n0   chromedriver                        0x000000010a02a159 chromedriver + 5120345\n1   chromedriver                        0x0000000109fb7b13 chromedriver + 4651795\n2   chromedriver                        0x0000000109ba7e68 chromedriver + 392808\n3   chromedriver                        0x0000000109b8818c chromedriver + 262540\n4   chromedriver                        0x0000000109bfe0cb chromedriver + 745675\n5   chromedriver                        0x0000000109c02530 chromedriver + 763184\n6   chromedriver                        0x0000000109bfab08 chromedriver + 731912\n7   chromedriver                        0x0000000109bd05dd chromedriver + 558557\n8   chromedriver                        0x0000000109bd14f5 chromedriver + 562421\n9   chromedriver                        0x0000000109fe738d chromedriver + 4846477\n10  chromedriver                        0x000000010a00121c chromedriver + 4952604\n11  chromedriver                        0x000000010a006a12 chromedriver + 4975122\n12  chromedriver                        0x000000010a001b4a chromedriver + 4954954\n13  chromedriver                        0x0000000109fdc5b0 chromedriver + 4801968\n14  chromedriver                        0x000000010a01bf78 chromedriver + 5062520\n15  chromedriver                        0x000000010a01c0ff chromedriver + 5062911\n16  chromedriver                        0x000000010a031545 chromedriver + 5150021\n17  libsystem_pthread.dylib             0x00007fff2030f8fc _pthread_start + 224\n18  libsystem_pthread.dylib             0x00007fff2030b443 thread_start + 15", "trace": "self = <class 'TestCase.test_vue.Test_Login_Vue'>\n\n    def teardown_class(self) -> None:\n        time.sleep(2)\n>       self.driver.close()\n\nTestCase/test_vue.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:938: in close\n    self.execute(Command.CLOSE)\nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:425: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9335bd1670>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...fff2030f8fc _pthread_start + 224\\\\n18  libsystem_pthread.dylib             0x00007fff2030b443 thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=99.0.4844.51)\nE       Stacktrace:\nE       0   chromedriver                        0x000000010a02a159 chromedriver + 5120345\nE       1   chromedriver                        0x0000000109fb7b13 chromedriver + 4651795\nE       2   chromedriver                        0x0000000109ba7e68 chromedriver + 392808\nE       3   chromedriver                        0x0000000109b8818c chromedriver + 262540\nE       4   chromedriver                        0x0000000109bfe0cb chromedriver + 745675\nE       5   chromedriver                        0x0000000109c02530 chromedriver + 763184\nE       6   chromedriver                        0x0000000109bfab08 chromedriver + 731912\nE       7   chromedriver                        0x0000000109bd05dd chromedriver + 558557\nE       8   chromedriver                        0x0000000109bd14f5 chromedriver + 562421\nE       9   chromedriver                        0x0000000109fe738d chromedriver + 4846477\nE       10  chromedriver                        0x000000010a00121c chromedriver + 4952604\nE       11  chromedriver                        0x000000010a006a12 chromedriver + 4975122\nE       12  chromedriver                        0x000000010a001b4a chromedriver + 4954954\nE       13  chromedriver                        0x0000000109fdc5b0 chromedriver + 4801968\nE       14  chromedriver                        0x000000010a01bf78 chromedriver + 5062520\nE       15  chromedriver                        0x000000010a01c0ff chromedriver + 5062911\nE       16  chromedriver                        0x000000010a031545 chromedriver + 5150021\nE       17  libsystem_pthread.dylib             0x00007fff2030f8fc _pthread_start + 224\nE       18  libsystem_pthread.dylib             0x00007fff2030b443 thread_start + 15\n\nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:247: NoSuchWindowException"}, "description": "输入正确用例，可以下载", "attachments": [{"name": "./images/2022-03-16-19-18-11.png", "source": "20913a4b-c856-488c-b973-0f2debe7e169-attachment.png", "type": "image/png"}], "parameters": [{"name": "file_name_info", "value": "[2, '输入正确用例，可以下载', 1, 'y', None]"}], "start": 1647429488998, "stop": 1647429492322, "uuid": "711606a7-fa50-41c3-b56a-b30fbbe38de5", "historyId": "d7f73096832c045b1e34718b57c5e48a", "testCaseId": "c578e092139091cb6df3f27bf4b55931", "fullName": "TestCase.test_vue.Test_Login_Vue#test_02_file", "labels": [{"name": "parentSuite", "value": "TestCase"}, {"name": "suite", "value": "test_vue"}, {"name": "subSuite", "value": "Test_Login_Vue"}, {"name": "host", "value": "YZQ.local"}, {"name": "thread", "value": "35281-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.test_vue"}]}